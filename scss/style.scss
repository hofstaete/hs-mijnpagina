////
/// @author Michel van der Wereld
////

/// Imports 
@import "normalize";
@import "bower_components/susy/sass/susy";
@import "bower_components/breakpoint-sass/stylesheets/breakpoint";
@import "bower_components/sass-mq/mq";
@import '_mixins';
@include border-box-sizing;

$susy: (
  debug: (image: show-columns),
  columns: 12, 
  container: 1140px,
  gutters: 0.25,
  global-box-sizing: border-box,
  math: fluid
);

// To enable support for browsers that do not support @media queries,
// (IE <= 8, Firefox <= 3, Opera <= 9) set $mq-responsive to false
// Create a separate stylesheet served exclusively to these browsers,
// meaning @media queries will be rasterized, relying on the cascade itself
$mq-responsive: true;

// Name your breakpoints in a way that creates a ubiquitous language
// across team members. It will improve communication between
// stakeholders, designers, developers, and testers.
$mq-breakpoints: (
    mobile:  320px,
    tablet:  740px,
    desktop: 980px,
    wide:    1300px,

    // Tweakpoints
    desktopAd: 810px,
    mobileLandscape: 480px
);

// Define the breakpoint from the $mq-breakpoints list that should
// be used as the target width when outputting a static stylesheet
// (i.e. when $mq-responsive is set to 'false').
$mq-static-breakpoint: desktop;

// If you want to display the currently active breakpoint in the top
// right corner of your site during development, add the breakpoints
// to this list, ordered by width, e.g. (mobile, tablet, desktop).
$mq-show-breakpoints: (mobile, mobileLandscape, tablet, desktop, wide);


/// Color 1
$color1: orange;


$breakpoints: (
  'small'     : 320px,
  'med'       : 640px,
  'large'     : 920px,
  'wide'      : 1200px,
  'mega'      : 1400px,
  );

.container {
  // background: $color1;
  @include container;

  // @include breakpoint(map-get($breakpoints, small) map-get($breakpoints, large)) {
  //   color: red;
  // }
}

.header{
  @include span(12);
  // background-color: grey;

  @include breakpoint( 320px ){
    background-color: white;
  }
}

.content {
  @include span(8); 
  // background-color: blue;
}

.sidebar {
  @include span(4 last); 
  // background-color: red;
}



.responsive {
    // Apply styling to mobile and upwards
    @include mq($from: mobile) {
        color: red;
    }
    // Apply styling up to devices smaller than tablets (exclude tablets)
    @include mq($until: tablet) {
        color: blue;
    }
    // Same thing, in landscape orientation
    @include mq($until: tablet, $and: '(orientation: landscape)') {
        color: hotpink;
    }
    // Apply styling to tablets up to desktop (exclude desktop)
    @include mq(tablet, desktop) {
        color: green;
    }
}





// .m-navigation {
//   &:after {
//   	color: blue; 
//   	@media screen and (min-width: 320px) {
//       content: '320px';
//       display: block;
//       width: 50%;
//     }
//     @media screen and (min-width: 767px) {
//       content: '767px';
//       display: inline-block;
//       width: 100%;
//     }
//   }
//   li {
//     display: block;
 
//     @media screen and (min-width: 767px) {
//       float: left;
//     }
//   }
// }


